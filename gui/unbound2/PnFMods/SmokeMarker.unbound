######################################################
#### WORLD MARKERS ###################################
######################################################
(def element WorldSmokeMarkersContainer() layout=true
	(scope
		(var parameterCol:gfx = "$datahub.getCollection(CC.parameter)")
		(var smokeMarkersContainerEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, 0, 'modSmokeMarkerEntityList')" (event "parameterCol.evAdded") (event "parameterCol.evRemoved"))
		(var dataComponent:gfx = "smokeMarkersContainerEntity.data")
		(var smokeMarkerEntityIds:array = "dataComponent ? dataComponent.data.ids : []" (event "dataComponent.evChanged"))
	)

	(controller $Repeat renderer='WorldSmokeMarker'
		(bind count "smokeMarkerEntityIds.length" (event "dataComponent.evChanged"))
		(args "smokeMarkerEntityIds[$index]")
	)
)


(def element WorldSmokeMarker (entityId:number) layout=true
	(scope
		#Event
		(event evMarkerUpdate)
		#Smoke Timers Entity
		(var smokeMarkerEntity:gfx = "$datahub.getEntity(entityId)")
		(var createdTime:number = "smokeMarkerEntity.data.data.spawnTime")
		(var screenPosition:gfx = "smokeMarkerEntity.screenPosition")
		(var worldMarker:gfx = "smokeMarkerEntity.worldMarker")
		#Visibility
		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var altVision:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))
		(var isBinocular:bool = "cameraEntity.camera.isBinocular" (event "cameraEntity.camera.evIsBinocularChanged"))
		(var distanceComponent:gfx = "smokeMarkerEntity.distance" (event "smokeMarkerEntity.evAdded") (event "smokeMarkerEntity.evRemoved"))
		(var distanceIndex:number = "distanceComponent.distanceIndex" (event "distanceComponent.evDistanceIndexChanged"))
		(var closeToCamera:bool = "distanceIndex == DistanceType.NEAR")
		(var isTimerVisible:bool = "altVision || closeToCamera")
		(var isDistanceVisible:bool = "altVision")
		(var markerAlpha:number = "isBinocular ? 0.7 : 1.0")
		#Timers
		(var isTimerEnabled:bool = "createdTime > 0")
		(var timerEntity:gfx = "$datahub.getSingleEntity(CC.timer)")
		(var timeElapsed:number = "timerEntity.timer.currentTime - createdTime" (event "timerEntity.timer.evInfrequent"))
		(var timeElapsedText:str = "isTimerEnabled && isTimerVisible ? '+' + round(timeElapsed) : ' '")
		#Screen Pos
		(var posX:number = "screenPosition ? screenPosition.position.x : 0" (event "evMarkerUpdate"))
		(var posY:number = "screenPosition ? screenPosition.position.y : 0" (event "evMarkerUpdate"))
		(var posZ:number = "worldMarker ? worldMarker.zindex : 0" (event "worldMarker.evZindexChanged"))
		(var updateEnabled:bool = "screenPosition && !(screenPosition.behindCamera)" (event "evEnterFrame"))
		
	)

	(dispatch evMarkerUpdate args={} (event "evEnterFrame") (bind enabled "updateEnabled"))

	(style
		(bind left "posX")
		(bind top "posY")
		(bind zindex "posZ")
		(position = "absolute")
		(align = "center|bottom")
		(bind alpha "markerAlpha")
	)

	(block
		(style
			(align = "center|middle")
			(width = 0) (height = 0)
		)
		
		(element SmokeDistanceItem "entityId" "isDistanceVisible")
		(block
			(style
				(bind backgroundImage "'url:../quick_commands/qc_icon_smoke.png'")
				(width = 51) (height = 51)
				(scaleX = 0.4) (scaleY = 0.4)
			)
		)
		(element SimpleMarkerTextItem "timeElapsedText")
	)
)

(def element SmokeDistanceItem (_entityId:number, _visibility:bool) layout=true
	(scope
		(var _markerEntity:gfx = "$datahub.getEntity(_entityId)")

		(var timer:gfx = "$datahub.getSingleComponent(CC.timer)")

		(macro GET_MARKER_ENTITY_COMPONENT 'distance')
		(var distanceToShip:number = "distanceComponent ? distanceComponent.distanceToShip : 0" (event "timer.evInfrequent"))
		(var distanceText:str = "_visibility ? formatFloatingPoint(round(distanceToShip * 10) / 10, 1) + ' ' + tr('IDS_KILOMETER'): ' '")
	)
	(element SimpleMarkerTextItem "distanceText")
)

######################################################
#### MINIMAP MARKERS #################################
######################################################
(def element MinimapMarkersContainer (_mapScale:number, _itemScale:number, _scaleRatio:number, _markerSettingsMap:array, _isLoading:bool = false) layout=true
	(scope
		(var markersCollection:gfx = "$datahub.getCollection(CC.minimapMarker)")
		(var availableMarkers:gfx = "markersCollection.getChildByPath('available')")
	)

	(class $FullsizeAbsolute)

	#mod
	(element MapSmokeMarkersContainer "_mapScale" "_itemScale" "_scaleRatio")
	#mod

	(controller $Repeat renderer='MapMarkerItem'
		(bind count "availableMarkers.items.length" watch=false (event "availableMarkers.evAdded"))
		(bindcall removeChildAt "$event[1]" (event "availableMarkers.evRemoved"))
		(args "availableMarkers" "_mapScale" "_itemScale" "_scaleRatio" "_markerSettingsMap" "_isLoading")
	)
)

(def element MapSmokeMarkersContainer (_mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(var parameterCol:gfx = "$datahub.getCollection(CC.parameter)")
		(var smokeMarkersContainerEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, 0, 'modSmokeMarkerEntityList')" (event "parameterCol.evAdded") (event "parameterCol.evRemoved"))
		(var dataComponent:gfx = "smokeMarkersContainerEntity.data")
		(var smokeMarkerEntityIds:array = "dataComponent ? dataComponent.data.ids : []" (event "dataComponent.evChanged"))
	)

	(mc 'flash.display.Sprite'
		(controller $Repeat renderer='MapSmokeMarker'
			(bind count "smokeMarkerEntityIds.length" (event "dataComponent.evChanged"))
			(args "smokeMarkerEntityIds[$index]" "_mapScale" "_itemScale" "_scaleRatio")
		)
		(alpha = 0.4)
		(blendMode = 'layer')
	)
)

(def element MapSmokeMarker (entityId:number, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		#Smoke Timers Entity
		(var smokeMarkerEntity:gfx = "$datahub.getEntity(entityId)")
		(var mapPosition:gfx = "smokeMarkerEntity.mapPosition")
		#Marker Scale
		(var markerScale:number = "_itemScale / _mapScale")
		(var radius:number = "smokeMarkerEntity.data.data.radius * _scaleRatio")
		#Map Pos
		(var posX:number = "mapPosition ? _scaleRatio * mapPosition.position.x : 0")# (event "evEnterFrame"))
		(var posY:number = "mapPosition ? _scaleRatio * mapPosition.position.y : 0")# (event "evEnterFrame"))
		(var posZ:number = "worldMarker ? worldMarker.zindex : 0" (event "worldMarker.evZindexChanged"))
	)

	(macro BIND_FAIR_SCALE "markerScale")

	(style
		(bind left "posX")
		(bind top "posY")
		(bind zindex "posZ")
		(position = "absolute")
	)

	(block
		(style
			(align = "center|middle")
			(width = 0) (height = 0)
		)
		
		(controller $Sector
			(arc = 360)
			(bind radius "radius")
			(color = "0xD3D3D3")
		)
	)
)