(def constant TT_SMOKEMARKER_INSTALLED true) #for modconfig

######################################################
#### WORLD MARKERS ###################################
######################################################
(def element SM_WorldSmokeMarkersContainer() layout=true
	(scope
		(var parameterCol:gfx = "$datahub.getCollection(CC.parameter)")
		(var smokeMarkersContainerEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, 0, 'modSmokeMarkerEntityList')" (event "parameterCol.evAdded") (event "parameterCol.evRemoved"))
		(var dataComponent:gfx = "smokeMarkersContainerEntity ? smokeMarkersContainerEntity.data : null")
		(var smokeMarkerEntityIds:array = "dataComponent ? dataComponent.data.ids : []" (event "dataComponent.evChanged"))
		(var entityIdsCount:number = "smokeMarkerEntityIds ? smokeMarkerEntityIds.length : 0")

		#Userprefs
		(macro TT_GET_USERPREF)

		(macro TT_GET_PREF_NUMBER _varName="'alphaScale'"	_pref="SM_PREFS.WORLD_ALPHA")
		(macro TT_GET_PREF_NUMBER _varName="'redScale'" 	_pref="SM_PREFS.WORLD_RED")
		(macro TT_GET_PREF_NUMBER _varName="'greenScale'"	_pref="SM_PREFS.WORLD_GREEN")
		(macro TT_GET_PREF_NUMBER _varName="'blueScale'"	_pref="SM_PREFS.WORLD_BLUE")

		(var colorTransform:dict = "{ redMultiplier: redScale, greenMultiplier: greenScale, blueMultiplier: blueScale, alphaMultiplier: alphaScale}")
	)

	(controller $Repeat renderer='SM_WorldSmokeMarker'
		(bind enabled "entityIdsCount > 0")
		(bind count "entityIdsCount")
		(args
			_entityId="smokeMarkerEntityIds[$index]"
			_colorTransform="colorTransform"
		)
	)
)


(def element SM_WorldSmokeMarker (_entityId:number, _colorTransform:dict="{}") layout=true
	(scope
		(event evMarkerShow)

		#Smoke Timers Entity
		(var _markerEntity:gfx = "$datahub.getEntity(_entityId)")

		(macro GET_MARKER_ENTITY_COMPONENT 'data')
		(macro GET_MARKER_ENTITY_COMPONENT 'screenPosition')
		(macro GET_MARKER_ENTITY_COMPONENT 'worldMarker')
		(macro GET_MARKER_ENTITY_COMPONENT 'distance')

		(var createdTime:number = "dataComponent ? dataComponent.data.spawnTime : -1")
		# Camera
		(var camera:gfx = "$datahub.getSingleComponent(CC.camera)")
		(var altVision:bool = "camera.altVision" (event "camera.evAltVisionChanged"))
		(var isBinocular:bool = "camera.isBinocular" (event "camera.evIsBinocularChanged"))
		(var isTactical:bool = "camera.isTactical" (event "camera.evTacticalStateChanged"))

		(var markerAlpha:number = "isBinocular ? 0.7 : 1.0")

		# Distance
		(var distanceIndex:number = "distanceComponent ? distanceComponent.distanceIndex : -1" (event "distanceComponent.evDistanceIndexChanged"))
		(var closeToCamera:bool = "distanceIndex == DistanceType.NEAR")
		(var isDistanceVisible:bool = "altVision && !isTactical")

		# Timers
		(macro IS_SPECTATOR_MODE)
		(var isTimerValid:bool = "createdTime > 0")
		(var isTimerVisible:bool = "(altVision || (isSpectatorTrainingMode && closeToCamera)) && !isTactical && isTimerValid")
		(var timer:gfx = "$datahub.getSingleComponent(CC.timer)")
		(var timeElapsed:number = "timer.currentTime - createdTime" (event "timer.evInfrequent"))
		(macro HUMAN_READABLE_COUNTDOWN_SCOPE "timeElapsed")

		# Screen Pos
		(var posX:number = "screenPositionComponent ? screenPositionComponent.position.x : 0" (event "evEnterFrame"))
		(var posY:number = "screenPositionComponent ? screenPositionComponent.position.y : 0" (event "evEnterFrame"))
		(var posZ:number = "worldMarkerComponent ? worldMarkerComponent.zindex : 0" (event "worldMarkerComponent.evZindexChanged"))
	)

	(dispatch evMarkerShow args="{}" on='addedToStage')

	(style
		(bind left "posX")
		(bind top "posY")
		(bind zindex "posZ")
		(position = "absolute")
		(align = "center|bottom")
		(bind alpha "markerAlpha")
	)

	(block
		(style
			(align = "center|middle")
			(width = 0) (height = 0)
		)
		
		(element DistanceItem "_markerEntity"
			(bind alpha "isDistanceVisible ? 1 : 0")
		)
		(block
			# To avoid conflict between alpha animation and colortransform
			# Simply moving the animation outside doesn't work with marginBottom
			(block
				(style
					(bind backgroundImage "'url:../quick_commands/qc_icon_smoke.png'")
					(width = 51) (height = 51)
					(scaleX = 1.5) (scaleY = 1.5)
				)
				(controller $Animation
					(bindcall play	duration="0.3"
									from="{alpha: 0, marginBottom: 10, scaleX: 1.5, scaleY: 1.5}"
									to="{alpha: 1, marginBottom: 0, scaleX: 0.4, scaleY: 0.4}"
									action="kill"
									(event "evMarkerShow")
					)
				)
			)
			(bind colorTransform "_colorTransform")
		)
		(element SimpleMarkerTextItem "countdownText"
			(bind alpha "isTimerVisible ? 1 : 0")
		)
	)
)

######################################################
#### MINIMAP MARKERS #################################
######################################################
(def element MinimapMarkersContainer (_mapScale:number, _itemScale:number, _scaleRatio:number, _markerSettingsMap:array, _isLoading:bool = false) layout=true
	(scope
		(var markersCollection:gfx = "$datahub.getCollection(CC.minimapMarker)")
		(var availableMarkers:gfx = "markersCollection.getChildByPath('available')")
	)

	(class $FullsizeAbsolute)

	#mod
	(element SM_MapSmokeMarkersContainer "_mapScale" "_itemScale" "_scaleRatio")
	#mod

	(controller $Repeat renderer='MapMarkerItem'
		(bind count "availableMarkers.items.length" watch=false (event "availableMarkers.evAdded"))
		(bindcall removeChildAt "$event[1]" (event "availableMarkers.evRemoved"))
		(args "availableMarkers" "_mapScale" "_itemScale" "_scaleRatio" "_markerSettingsMap" "_isLoading")
	)
)

(def element SM_MapSmokeMarkersContainer (_mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(var parameterCol:gfx = "$datahub.getCollection(CC.parameter)")
		(var smokeMarkersContainerEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, 0, 'modSmokeMarkerEntityList')" (event "parameterCol.evAdded") (event "parameterCol.evRemoved"))
		(var dataComponent:gfx = "smokeMarkersContainerEntity ? smokeMarkersContainerEntity.data : null")
		(var smokeMarkerEntityIds:array = "dataComponent ? dataComponent.data.ids : []" (event "dataComponent.evChanged"))
		(var entityIdsCount:number = "smokeMarkerEntityIds ? smokeMarkerEntityIds.length : 0")

		#UserPrefs
		(macro TT_GET_USERPREF)
		
		(macro TT_GET_PREF_NUMBER _varName="'alphaScale'"	_pref="SM_PREFS.MAP_ALPHA")
		(macro TT_GET_PREF_NUMBER _varName="'redScale'" 	_pref="SM_PREFS.MAP_RED")
		(macro TT_GET_PREF_NUMBER _varName="'greenScale'"	_pref="SM_PREFS.MAP_GREEN")
		(macro TT_GET_PREF_NUMBER _varName="'blueScale'"	_pref="SM_PREFS.MAP_BLUE")
	)

	(block
		(controller $Repeat renderer='SM_MapSmokeMarker'
			(bind enabled "entityIdsCount > 0")
			(bind count "entityIdsCount")
			(args
				_entityId="smokeMarkerEntityIds[$index]"
				_mapScale="_mapScale"
				_itemScale="_itemScale"
				_scaleRatio="_scaleRatio"
			)
		)
		(bind colorTransform "{ redMultiplier: redScale, greenMultiplier: greenScale, blueMultiplier: blueScale, alphaMultiplier: alphaScale}")
		(blendMode = 'layer')
	)
)

(def element SM_MapSmokeMarker (_entityId:number, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(event evMarkerShow)
		#Smoke Timers Entity
		(var smokeMarkerEntity:gfx = "$datahub.getEntity(_entityId)")
		(var mapPosition:gfx = "smokeMarkerEntity.mapPosition")
		#Marker Scale
		(var markerScale:number = "_itemScale / _mapScale")
		(var radius:number = "smokeMarkerEntity.data.data.radius * _scaleRatio")
		#Map Pos
		(var posX:number = "mapPosition ? _scaleRatio * mapPosition.position.x : 0")# (event "evEnterFrame"))
		(var posY:number = "mapPosition ? _scaleRatio * mapPosition.position.y : 0")# (event "evEnterFrame"))
	)

	(dispatch evMarkerShow args="{}" on='addedToStage')

	(macro BIND_FAIR_SCALE "markerScale")

	(style
		(bind left "posX")
		(bind top "posY")
		(position = "absolute")
	)

	#For some really weird reason, a circle does not appear when there is only one instance within the parent repeat.
	#This animation somehow solves that issue, but not sure why it happens in the first place.
	#Disabling blendMode=layer solves the problem, so I assume this is a bug on the framework/AS3 side than this mod itself.


	(block
		(style
			(align = "center|middle")
			(width = 0) (height = 0)
		)

		(controller $Animation
			(bindcall  play
				duration=0.3
				from =	{alpha: 0, scaleX: 3, scaleY: 3}
				to	 =	{alpha: 1, scaleX: 1.0, scaleY: 1.0}
				(event "evMarkerShow")
			)
		)
			
		(controller $Sector
			(arc = 360)
			(bind radius "radius")
			(bind color "0xFFFFFF")
		)
	)
)